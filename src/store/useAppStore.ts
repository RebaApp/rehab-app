import { create } from 'zustand';
import { AppStore, Center, User, Article } from '../types';
import { ARTICLES, CENTERS } from '../utils/constants';

// –í–µ–±-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π store —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
const useAppStore = create<AppStore>((set, get) => ({
      // === AUTH STATE ===
      user: null,
      isAuthenticated: false,
      authLoading: false,

      // === CENTERS STATE ===
      centers: CENTERS, // –ù–∞—á–∏–Ω–∞–µ–º —Å –±–∞–∑–æ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤
      centersLoading: false,
      centersError: null,
      lastCentersUpdate: null,

      // === ARTICLES STATE ===
      articles: ARTICLES, // –ù–∞—á–∏–Ω–∞–µ–º —Å –±–∞–∑–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π
      articlesLoading: false,
      articlesError: null,
      lastArticlesUpdate: null,

      // === FAVORITES STATE ===
      favorites: {},
      favoritesLoading: false,

      // === UI STATE ===
      currentTab: 'home',
      searchQuery: '',
      articleQuery: '',
      filtersVisible: false,
      settingsVisible: false,
      selectedCenter: null,
      articleOpen: null,
      isOnline: true,
      refreshing: false,
  shimmer: null, // Will be initialized when needed

      // === FILTERS STATE ===
      filters: {
        cities: [],
        types: [],
        minPrice: '',
        maxPrice: '',
        minRating: 0,
    sortBy: 'rating' as const,
    sortOrder: 'desc' as const,
      },

      // === AUTH ACTIONS ===
      setUser: (user) => set({ 
        user, 
        isAuthenticated: !!user 
      }),

      setAuthLoading: (loading) => set({ authLoading: loading }),

  login: async (email: string, _password: string) => {
        set({ authLoading: true });
        try {
          // Mock login - –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API –≤—ã–∑–æ–≤
          const mockUser: User = {
            id: `user_${Date.now()}`,
            email,
            name: email.split('@')[0],
            userType: 'USER',
            createdAt: new Date().toISOString(),
            updatedAt: new Date().toISOString()
          };
          
          set({ 
            user: mockUser, 
            isAuthenticated: true, 
            authLoading: false 
          });
          
          return { success: true, data: mockUser };
        } catch (error) {
          set({ authLoading: false });
          return { 
            success: false, 
            error: error instanceof Error ? error.message : 'Unknown error' 
          };
        }
      },

  register: async (userData: Partial<User>) => {
        set({ authLoading: true });
        try {
          const newUser: User = {
            id: `user_${Date.now()}`,
            email: userData.email || '',
            name: userData.name || '',
            userType: userData.userType || 'USER',
            createdAt: new Date().toISOString(),
            updatedAt: new Date().toISOString(),
            ...userData
          };
          
          set({ 
            user: newUser, 
            isAuthenticated: true, 
            authLoading: false 
          });
          
          return { success: true, data: newUser };
        } catch (error) {
          set({ authLoading: false });
          return { 
            success: false, 
            error: error instanceof Error ? error.message : 'Unknown error' 
          };
        }
      },

  logout: () => {
    set({ 
        user: null, 
        isAuthenticated: false,
      favorites: {}
    });
  },

  loadUser: async () => {
    // Mock user loading
    return;
  },

      // === CENTERS ACTIONS ===
  setCenters: (centers) => set({ centers }),
      setCentersLoading: (loading) => set({ centersLoading: loading }),
      setCentersError: (error) => set({ centersError: error }),

      loadCenters: async () => {
        console.log('üîÑ loadCenters –≤—ã–∑–≤–∞–Ω - –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...');
        set({ centersLoading: true, centersError: null });
        try {
      // Mock API call with realistic delay
      await new Promise(resolve => setTimeout(resolve, 1000));

      // –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ü–µ–Ω—Ç—Ä–æ–≤ —Å –≤–∞—à–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
          const mockCenters: Center[] = [
            {
              id: '1',
          name: '–¶–µ–Ω—Ç—Ä "–ù–æ–≤–∞—è –ñ–∏–∑–Ω—å"',
              city: '–ú–æ—Å–∫–≤–∞',
          address: '—É–ª. –õ–µ–Ω–∏–Ω–∞, 10',
              phone: '+7 (495) 123-45-67',
          email: 'info@newlife.ru',
          description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏ —Å –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º –∫ –ª–µ—á–µ–Ω–∏—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.',
          services: ['–î–µ—Ç–æ–∫—Å', '–ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è', '–ì—Ä—É–ø–ø–æ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è'],
          photos: [
            require("../../assets/images/centers/center1.jpg"),
            require("../../assets/images/centers/center2.jpg"),
            require("../../assets/images/centers/center3.jpg")
          ],
              rating: 4.5,
          reviewsCount: 120,
          price: '–æ—Ç 50,000 ‚ÇΩ/–º–µ—Å—è—Ü',
              verified: true,
              coordinates: { latitude: 55.7558, longitude: 37.6176 },
              capacity: 50,
              yearFounded: 2010,
          workingHours: '24/7',
          license: '–õ–∏—Ü–µ–Ω–∑–∏—è ‚Ññ123456',
          descriptionFull: '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏',
          methods: ['–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∞—è —Ç–µ—Ä–∞–ø–∏—è', '–ì—Ä—É–ø–ø–æ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è'],
          reviews: [],
        },
        {
          id: '2',
          name: '–ö–ª–∏–Ω–∏–∫–∞ "–í–æ–∑—Ä–æ–∂–¥–µ–Ω–∏–µ"',
          city: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
          address: '–ø—Ä. –ù–µ–≤—Å–∫–∏–π, 100',
          phone: '+7 (812) 987-65-43',
          email: 'info@vozrozhdenie.ru',
          description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å –≤ –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º.',
          services: ['–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–∑–Ω–æ–µ –ª–µ—á–µ–Ω–∏–µ', '–ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è', '–°–µ–º–µ–π–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è'],
          photos: [
            require("../../assets/images/centers/center2.jpg"),
            require("../../assets/images/centers/center3.jpg"),
            require("../../assets/images/centers/center4.jpg")
          ],
          rating: 4.8,
          reviewsCount: 89,
          price: '–æ—Ç 45,000 ‚ÇΩ/–º–µ—Å—è—Ü',
          verified: true,
          coordinates: { latitude: 59.9311, longitude: 30.3609 },
          capacity: 30,
          yearFounded: 2015,
          workingHours: '8:00 - 20:00',
          license: '–õ–∏—Ü–µ–Ω–∑–∏—è ‚Ññ789012',
          descriptionFull: '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∏–Ω–∏–∫–∏ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏',
          methods: ['–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–∑–Ω–æ–µ –ª–µ—á–µ–Ω–∏–µ', '–°–µ–º–µ–π–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è'],
          reviews: [],
        },
        {
          id: '3',
          name: '–¶–µ–Ω—Ç—Ä "–ü—É—Ç—å –∫ –°–≤–æ–±–æ–¥–µ"',
          city: '–ö–∞–∑–∞–Ω—å',
          address: '—É–ª. –ë–∞—É–º–∞–Ω–∞, 25',
          phone: '+7 (843) 555-12-34',
          email: 'info@putksvobode.ru',
          description: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä –¥–ª—è –ª–µ—á–µ–Ω–∏—è –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.',
          services: ['–î–µ—Ç–æ–∫—Å', '–ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è', '–¢—Ä—É–¥–æ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è'],
          photos: [
            require("../../assets/images/centers/center3.jpg"),
            require("../../assets/images/centers/center4.jpg"),
            require("../../assets/images/centers/center5.jpg")
          ],
          rating: 4.3,
          reviewsCount: 67,
          price: '–æ—Ç 40,000 ‚ÇΩ/–º–µ—Å—è—Ü',
          verified: true,
          coordinates: { latitude: 55.8304, longitude: 49.0661 },
          capacity: 40,
          yearFounded: 2012,
          workingHours: '–ü–Ω-–ü—Ç: 9:00-18:00',
          license: '–õ–∏—Ü–µ–Ω–∑–∏—è ‚Ññ345678',
          descriptionFull: '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞',
          methods: ['12 —à–∞–≥–æ–≤', '–¢—Ä—É–¥–æ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è'],
          reviews: [],
        },
        {
          id: '4',
          name: '–ö–ª–∏–Ω–∏–∫–∞ "–ì–∞—Ä–º–æ–Ω–∏—è"',
          city: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥',
          address: '—É–ª. –ú–∞–ª—ã—à–µ–≤–∞, 15',
          phone: '+7 (343) 777-88-99',
          email: 'info@garmoniya.ru',
          description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –ª–µ—á–µ–Ω–∏—è.',
          services: ['–î–µ—Ç–æ–∫—Å', '–ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è', '–ê—Ä—Ç-—Ç–µ—Ä–∞–ø–∏—è'],
          photos: [
            require("../../assets/images/centers/center4.jpg"),
            require("../../assets/images/centers/center5.jpg"),
            require("../../assets/images/centers/center6.jpg")
          ],
          rating: 4.7,
          reviewsCount: 95,
          price: '–æ—Ç 55,000 ‚ÇΩ/–º–µ—Å—è—Ü',
          verified: true,
          coordinates: { latitude: 56.8431, longitude: 60.6454 },
          capacity: 35,
          yearFounded: 2018,
          workingHours: '24/7',
          license: '–õ–∏—Ü–µ–Ω–∑–∏—è ‚Ññ901234',
          descriptionFull: '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∏–Ω–∏–∫–∏',
          methods: ['–ê—Ä—Ç-—Ç–µ—Ä–∞–ø–∏—è', '–ö–ü–¢'],
          reviews: [],
        },
        {
          id: '5',
          name: '–¶–µ–Ω—Ç—Ä "–°–ø–∞—Å–µ–Ω–∏–µ"',
          city: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫',
          address: '–ø—Ä. –ö—Ä–∞—Å–Ω—ã–π, 50',
          phone: '+7 (383) 333-44-55',
          email: 'info@spasenie.ru',
          description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å –≤ –±–æ—Ä—å–±–µ —Å –Ω–∞—Ä–∫–æ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å—é.',
          services: ['–î–µ—Ç–æ–∫—Å', '–ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è', '–°–µ–º–µ–π–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è'],
          photos: [
            require("../../assets/images/centers/center5.jpg"),
            require("../../assets/images/centers/center6.jpg"),
            require("../../assets/images/centers/center1.jpg")
          ],
          rating: 4.6,
          reviewsCount: 78,
          price: '–æ—Ç 48,000 ‚ÇΩ/–º–µ—Å—è—Ü',
          verified: true,
          coordinates: { latitude: 55.0084, longitude: 82.9357 },
          capacity: 45,
          yearFounded: 2016,
          workingHours: '–ü–Ω-–í—Å: 8:00-22:00',
          license: '–õ–∏—Ü–µ–Ω–∑–∏—è ‚Ññ567890',
          descriptionFull: '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞',
          methods: ['–°–µ–º–µ–π–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è', '12 —à–∞–≥–æ–≤'],
          reviews: [],
        },
        {
          id: '6',
          name: '–ö–ª–∏–Ω–∏–∫–∞ "–ù–∞–¥–µ–∂–¥–∞"',
          city: '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥',
          address: '—É–ª. –ë–æ–ª—å—à–∞—è –ü–æ–∫—Ä–æ–≤—Å–∫–∞—è, 30',
          phone: '+7 (831) 222-33-44',
          email: 'info@nadezhda.ru',
          description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –ª–µ—á–µ–Ω–∏—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏.',
          services: ['–î–µ—Ç–æ–∫—Å', '–ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è', '–ì—Ä—É–ø–ø–æ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è'],
          photos: [
            require("../../assets/images/centers/center6.jpg"),
            require("../../assets/images/centers/center1.jpg"),
            require("../../assets/images/centers/center2.jpg")
          ],
          rating: 4.4,
          reviewsCount: 56,
          price: '–æ—Ç 42,000 ‚ÇΩ/–º–µ—Å—è—Ü',
          verified: true,
          coordinates: { latitude: 56.2965, longitude: 43.9361 },
          capacity: 25,
          yearFounded: 2014,
          workingHours: '–ü–Ω-–ü—Ç: 9:00-19:00',
          license: '–õ–∏—Ü–µ–Ω–∑–∏—è ‚Ññ123789',
          descriptionFull: '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∏–Ω–∏–∫–∏',
          methods: ['–ö–ü–¢', '–ì—Ä—É–ø–ø–æ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è'],
          reviews: [],
        },
        {
          id: '7',
          name: '–¶–µ–Ω—Ç—Ä "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ"',
          city: '–°–∞–º–∞—Ä–∞',
          address: '—É–ª. –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è, 20',
          phone: '+7 (846) 444-55-66',
          email: 'info@vosstanovlenie.ru',
          description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤.',
          services: ['–î–µ—Ç–æ–∫—Å', '–ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è', '–¢—Ä—É–¥–æ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è'],
          photos: [
            require("../../assets/images/centers/center1.jpg"),
            require("../../assets/images/centers/center2.jpg"),
            require("../../assets/images/centers/center3.jpg")
          ],
          rating: 4.2,
          reviewsCount: 43,
          price: '–æ—Ç 38,000 ‚ÇΩ/–º–µ—Å—è—Ü',
          verified: true,
          coordinates: { latitude: 53.2001, longitude: 50.1500 },
          capacity: 30,
          yearFounded: 2013,
          workingHours: '–ü–Ω-–í—Å: 8:00-20:00',
          license: '–õ–∏—Ü–µ–Ω–∑–∏—è ‚Ññ456123',
          descriptionFull: '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞',
          methods: ['–¢—Ä—É–¥–æ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è', '12 —à–∞–≥–æ–≤'],
          reviews: [],
        },
        {
          id: '8',
          name: '–ö–ª–∏–Ω–∏–∫–∞ "–ò—Å—Ü–µ–ª–µ–Ω–∏–µ"',
          city: '–û–º—Å–∫',
          address: '—É–ª. –õ–µ–Ω–∏–Ω–∞, 5',
          phone: '+7 (3812) 666-77-88',
          email: 'info@istselenie.ru',
          description: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä –¥–ª—è –ª–µ—á–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∏–¥–æ–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.',
          services: ['–î–µ—Ç–æ–∫—Å', '–ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è', '–ê—Ä—Ç-—Ç–µ—Ä–∞–ø–∏—è'],
          photos: [
            require("../../assets/images/centers/center4.jpg"),
            require("../../assets/images/centers/center5.jpg"),
            require("../../assets/images/centers/center6.jpg")
          ],
          rating: 4.5,
          reviewsCount: 72,
          price: '–æ—Ç 46,000 ‚ÇΩ/–º–µ—Å—è—Ü',
          verified: true,
          coordinates: { latitude: 54.9885, longitude: 73.3242 },
          capacity: 35,
          yearFounded: 2017,
          workingHours: '24/7',
          license: '–õ–∏—Ü–µ–Ω–∑–∏—è ‚Ññ789456',
          descriptionFull: '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∏–Ω–∏–∫–∏',
          methods: ['–ê—Ä—Ç-—Ç–µ—Ä–∞–ø–∏—è', '–ö–ü–¢'],
          reviews: [],
        },
        {
          id: '9',
          name: '–¶–µ–Ω—Ç—Ä "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ"',
          city: '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É',
          address: '–ø—Ä. –ë—É–¥–µ–Ω–Ω–æ–≤—Å–∫–∏–π, 40',
          phone: '+7 (863) 888-99-00',
          email: 'info@obnovlenie.ru',
          description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ª–µ—á–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.',
          services: ['–î–µ—Ç–æ–∫—Å', '–ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è', '–°–µ–º–µ–π–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è'],
          photos: [
            require("../../assets/images/centers/center6.jpg"),
            require("../../assets/images/centers/center1.jpg"),
            require("../../assets/images/centers/center2.jpg")
          ],
          rating: 4.6,
          reviewsCount: 84,
          price: '–æ—Ç 52,000 ‚ÇΩ/–º–µ—Å—è—Ü',
          verified: true,
          coordinates: { latitude: 47.2225, longitude: 39.7187 },
          capacity: 40,
          yearFounded: 2019,
          workingHours: '–ü–Ω-–í—Å: 9:00-21:00',
          license: '–õ–∏—Ü–µ–Ω–∑–∏—è ‚Ññ012345',
              descriptionFull: '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞',
          methods: ['–°–µ–º–µ–π–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è', '12 —à–∞–≥–æ–≤'],
          reviews: [],
        },
        {
          id: '10',
          name: '–ö–ª–∏–Ω–∏–∫–∞ "–ó–¥–æ—Ä–æ–≤—å–µ"',
          city: '–£—Ñ–∞',
          address: '—É–ª. –õ–µ–Ω–∏–Ω–∞, 15',
          phone: '+7 (347) 999-00-11',
          email: 'info@zdorovie.ru',
          description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å –≤ –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º.',
          services: ['–î–µ—Ç–æ–∫—Å', '–ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è', '–ì—Ä—É–ø–ø–æ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è'],
          photos: [
            require("../../assets/images/centers/center3.jpg"),
            require("../../assets/images/centers/center4.jpg"),
            require("../../assets/images/centers/center5.jpg")
          ],
          rating: 4.3,
          reviewsCount: 61,
          price: '–æ—Ç 44,000 ‚ÇΩ/–º–µ—Å—è—Ü',
          verified: true,
          coordinates: { latitude: 54.7388, longitude: 55.9721 },
          capacity: 28,
          yearFounded: 2015,
          workingHours: '–ü–Ω-–ü—Ç: 8:00-18:00',
          license: '–õ–∏—Ü–µ–Ω–∑–∏—è ‚Ññ345012',
          descriptionFull: '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∏–Ω–∏–∫–∏',
          methods: ['–ì—Ä—É–ø–ø–æ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è', '–ö–ü–¢'],
          reviews: [],
        },
          ];
          
          console.log('‚úÖ –¶–µ–Ω—Ç—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', mockCenters.length, '—Ü–µ–Ω—Ç—Ä–æ–≤');
          console.log('üì∏ –ü–µ—Ä–≤—ã–π —Ü–µ–Ω—Ç—Ä photos:', mockCenters[0]?.photos);
          
          set({ 
            centers: mockCenters, 
            centersLoading: false,
        centersError: null,
        lastCentersUpdate: Date.now(),
          });

      return;
        } catch (error) {
          set({ 
            centersLoading: false,
        centersError: 'Failed to load centers',
      });
      return;
    }
  },

  refreshCenters: async () => {
    return get().loadCenters();
  },

  // === ARTICLES ACTIONS ===
  setArticles: (articles: Article[]) => set({ articles }),
  setArticlesLoading: (loading: boolean) => set({ articlesLoading: loading }),
  setArticlesError: (error: string | null) => set({ articlesError: error }),

  loadArticles: async () => {
    set({ articlesLoading: true, articlesError: null });
    try {
      // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—å–∏, –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ API
      set({ 
        articles: ARTICLES, 
        articlesLoading: false,
        articlesError: null,
        lastArticlesUpdate: Date.now(),
      });
      return;
    } catch (error) {
      set({ 
        articlesLoading: false,
        articlesError: 'Failed to load articles',
      });
      return;
    }
  },

  refreshArticles: async () => {
    return get().loadArticles();
  },

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏
  addArticle: (articleData: {
    title: string;
    excerpt: string;
    body: string;
    image: string;
    authorName: string;
    authorCredentials: string;
    rubric: string;
    articleType: 'media' | 'integration';
    centerId?: string;
  }) => {
    const { articles } = get();
    const newArticle: Article = {
      id: `article_${Date.now()}`,
      title: articleData.title,
      excerpt: articleData.excerpt,
      body: articleData.body,
      image: articleData.image,
      author: `${articleData.authorName} - ${articleData.authorCredentials}`,
      category: articleData.rubric,
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString(),
    };

    set({
      articles: [newArticle, ...articles], // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
      lastArticlesUpdate: Date.now(),
    });

    return newArticle;
  },

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
  updateArticle: (id: string, updates: Partial<Article>) => {
    const { articles } = get();
    const updatedArticles = articles.map((article: Article) =>
      article.id === id 
        ? { ...article, ...updates, updatedAt: new Date().toISOString() }
        : article
    );

    set({
      articles: updatedArticles,
      lastArticlesUpdate: Date.now(),
    });
  },

  // –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
  deleteArticle: (id: string) => {
    const { articles } = get();
    const filteredArticles = articles.filter((article: Article) => article.id !== id);

    set({
      articles: filteredArticles,
      lastArticlesUpdate: Date.now(),
    });
  },

      // === FAVORITES ACTIONS ===
      setFavorites: (favorites) => set({ favorites }),
  isFavorite: (centerId) => get().favorites[centerId] || false,
  toggleFavorite: (centerId) => {
        const { favorites } = get();
    set({
      favorites: {
        ...favorites,
        [centerId]: !favorites[centerId],
      },
    });
  },
  setFavoritesLoading: (loading: boolean) => set({ favoritesLoading: loading }),

      // === UI ACTIONS ===
      setCurrentTab: (tab) => set({ currentTab: tab }),
      setSelectedCenter: (center) => set({ selectedCenter: center }),
      setArticleOpen: (article) => set({ articleOpen: article }),
  setSettingsVisible: (visible) => set({ settingsVisible: visible }),
  setFiltersVisible: (visible) => set({ filtersVisible: visible }),
  setRefreshing: (refreshing) => set({ refreshing }),
  setSearchQuery: (query: string) => set({ searchQuery: query }),
  setArticleQuery: (query: string) => set({ articleQuery: query }),
  setSearchText: (_text: string) => set(state => ({ filters: { ...state.filters } })),
  setCityFilter: (_city: string) => set(state => ({ filters: { ...state.filters } })),
  setServicesFilter: (_services: string[]) => set(state => ({ filters: { ...state.filters } })),
  setRatingFilter: (rating: number) => set(state => ({ filters: { ...state.filters, minRating: rating } })),
  setIsOnline: (online: boolean) => set({ isOnline: online }),
  setFilters: (filters) => set(state => ({ filters: { ...state.filters, ...filters } })),
      resetFilters: () => set({
        filters: {
          cities: [],
          types: [],
          minPrice: '',
          maxPrice: '',
          minRating: 0,
      sortBy: 'rating' as const,
      sortOrder: 'desc' as const,
    }
  }),
  applyFilters: () => get().getFilteredCenters(),

  // === HELPER METHODS ===
  getFilteredCenters: () => {
    const { centers, filters } = get();
    return centers.filter(center => {
      const matchesCity = filters.cities.length === 0 || filters.cities.includes(center.city);
      const matchesRating = center.rating >= filters.minRating;
      return matchesCity && matchesRating;
    });
      },

      getFilteredArticles: () => {
        const { articleQuery } = get();
    if (!articleQuery) {
      return ARTICLES;
    }
        const query = articleQuery.toLowerCase();
        return ARTICLES.filter(article =>
          article.title.toLowerCase().includes(query) ||
          article.excerpt.toLowerCase().includes(query) ||
          (article.body || '').toLowerCase().includes(query)
        );
  },

  getFavoriteCenters: () => {
    const { centers, favorites } = get();
    return centers.filter(center => favorites[center.id]);
  },
}));

export default useAppStore;